<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="comment">
	<select id="getMyCommentList" resultType="myComment">
		<![CDATA[
	        select m.poster_path, m.movie_id, m.title, m.release_year, c.comment, r.rating, c.write_time, c.reply_cnt
			from movie_dup m
			join comment c
			on c.movie_id=m.movie_id
			join rating r
			on r.movie_id=m.movie_id
			where c.user_id=#{user_id} and r.user_id=#{user_id}
			order by ${sortType} desc;
	    ]]>
	</select>
	<select id="getSortComments" resultType="curComment">
		<![CDATA[
	        SELECT b.profile_img, a.nickname, c.comment_id, c.comment, c.write_time,
	        c.views, c.reply_cnt, c.user_id, c.movie_id, COALESCE(r.rating, 0.0) AS rating
			FROM user a
			JOIN user_detail b ON a.id = b.user_id
			JOIN comment c ON c.user_id = a.id
			LEFT JOIN rating r ON r.user_id = a.id and r.movie_id=c.movie_id
			where c.movie_id=#{movie_id}
            order by ${sortType} desc;
	    ]]>
	</select>
	<select id="getSortCommentsDefault" resultType="curComment">
		<![CDATA[
	        SELECT b.profile_img, a.nickname, c.comment_id, c.comment, c.write_time,
	        c.views, c.reply_cnt, c.user_id, c.movie_id, COALESCE(r.rating, 0.0) AS rating
			FROM user a
			JOIN user_detail b ON a.id = b.user_id
			JOIN comment c ON c.user_id = a.id
			LEFT JOIN rating r ON r.user_id = a.id and r.movie_id=c.movie_id
			where c.movie_id=#{movie_id}
            order by c.write_time desc;
	    ]]>
	</select>
	<update id="updateReplyCnt">
		UPDATE COMMENT SET reply_cnt=reply_cnt+1 WHERE COMMENT_ID=#{comment_id}
	</update>
	<delete id="deleteComment">
		<![CDATA[
			DELETE FROM COMMENT WHERE USER_ID=#{user_id} AND MOVIE_ID=#{movie_id}
		]]>
	</delete>
	<update id="modifyComment">
		<![CDATA[
			UPDATE COMMENT SET COMMENT=#{comment} WHERE USER_ID=#{user_id} AND MOVIE_ID=#{movie_id}
		]]>
	</update>
	<insert id="insertComment">
		<![CDATA[
			INSERT INTO comment(COMMENT, USER_ID, MOVIE_ID) 
			VALUES(#{comment}, #{user_id}, #{movie_id})
		]]>
	</insert>
	<select id="getComment" resultType="comment">
		<![CDATA[
	        SELECT * FROM COMMENT WHERE MOVIE_ID=#{movie_id} AND USER_ID=#{user_id}
	    ]]>
	</select>
	<select id="getCommentList" resultType="curComment">
		<![CDATA[
			SELECT b.profile_img, a.nickname, c.comment_id, c.comment, c.reply_cnt,
			       MAX(c.write_time) AS write_time, MAX(c.views) AS views, MAX(c.user_id) AS user_id, 
			       MAX(c.movie_id) AS movie_id, COALESCE(MAX(r.rating), 0.0) AS rating
			FROM user a
			JOIN user_detail b ON a.id = b.user_id
			JOIN comment c ON c.user_id = a.id AND c.movie_id = #{movie_id}
			LEFT JOIN rating r ON r.user_id = a.id AND r.movie_id = #{movie_id}
			GROUP BY b.profile_img, a.nickname, c.comment_id, c.comment, c.reply_cnt
			ORDER BY MAX(c.reply_cnt) DESC, c.WRITE_TIME DESC;
	    ]]>
	</select>
	<select id="getCurComment" resultType="curComment">
		<![CDATA[
	        SELECT b.profile_img, a.nickname, c.comment_id, c.comment, c.write_time,
	        c.views, c.reply_cnt, c.user_id, c.movie_id, COALESCE(r.rating, 0.0) AS rating
			FROM user a
			JOIN user_detail b ON a.id = b.user_id
			JOIN comment c ON c.user_id = a.id
			LEFT JOIN rating r ON r.user_id = a.id and r.movie_id=c.movie_id
			where c.comment_id=#{comment_id} and c.movie_id=#{movie_id};
	    ]]>
	</select>
	<update id="curCommentView">
	    <![CDATA[
	        UPDATE COMMENT SET views=views+1 WHERE comment_id=#{comment_id} and movie_id=#{movie_id};
	    ]]>
	</update>
</mapper>